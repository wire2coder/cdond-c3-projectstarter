# show all names of buckets
aws s3 ls | awk '{print $3}' | xargs -I {} echo {}

# In this version of the command, the sh -c command is used to execute a shell command for each bucket name passed to xargs. The shell command uses the && operator to run two commands sequentially: the aws s3 rb command to delete the bucket, 
# and the sleep 5 command to pause for 5 seconds.
aws s3 ls | awk '{print $3}' | xargs -I {} sh -c 'aws s3 rb s3://{} --force && sleep 5'

# show all names of 'RDS'
aws rds describe-db-instances 
aws rds describe-db-instances --filters "Name=engine,Values=postgres" 
aws rds describe-db-instances --filters "Name=engine,Values=postgres" | grep DBInstanceIdentifier
aws rds describe-db-instances --filters "Name=engine,Values=postgres" | grep DBInstanceIdentifier | awk '{print $2}' | xargs -I {} echo {}

# show all names of 'EC2'
aws ec2 describe-instances

# aws for delete an 'EC2'
aws ec2 terminate-instances --instance-ids i-1234567890abcdef0


# Host names for Database
postgres.cdjbpzo0rxzz.us-east-1.rds.amazonaws.com:5432

sudo apt install -y postgresql-client
pg_isready -d <db_name> -h <host_name> -p <port_number> -U <db_user>   
pg_isready -d postgres -h postgres.cdjbpzo0rxzz.us-east-1.rds.amazonaws.com -p 5432 -U postgres

# API url 'backend' (just a server)
https://<Public-IP>:3030/api/status
https://udapeople-4238cfc.s3-website-us-east-1.amazonaws.com:3030/api/status

# url for the 'front' (just a server)
http://udapeople-4238cfc.s3-website-us-east-1.amazonaws.com/#/employees

# the kvdb.io is a key-value 'database' (just a server)
https://kvdb.io/LczeYSKVkhYHEHan97SoLK/migration_${CIRCLE_WORKFLOW_ID:0:7} -d '1'



###############################################
# install prometheus
# https://codewizardly.com/prometheus-on-aws-ec2-part1/
###############################################
sudo useradd --no-create-home prometheus
sudo mkdir /etc/prometheus
sudo mkdir /var/lib/prometheus


wget https://github.com/prometheus/prometheus/releases/download/v2.19.0/prometheus-2.19.0.linux-amd64.tar.gz
tar xvfz prometheus-2.19.0.linux-amd64.tar.gz

sudo cp prometheus-2.19.0.linux-amd64/prometheus /usr/local/bin
sudo cp prometheus-2.19.0.linux-amd64/promtool /usr/local/bin/
sudo cp -r prometheus-2.19.0.linux-amd64/consoles /etc/prometheus
sudo cp -r prometheus-2.19.0.linux-amd64/console_libraries /etc/prometheus

# why are we running this command again?
sudo cp prometheus-2.19.0.linux-amd64/promtool /usr/local/bin/
rm -rf prometheus-2.19.0.linux-amd64.tar.gz prometheus-2.19.0.linux-amd64


sudo chown prometheus:prometheus /etc/prometheus
sudo chown prometheus:prometheus /usr/local/bin/prometheus
sudo chown prometheus:prometheus /usr/local/bin/promtool
sudo chown -R prometheus:prometheus /etc/prometheus/consoles
sudo chown -R prometheus:prometheus /etc/prometheus/console_libraries
sudo chown -R prometheus:prometheus /var/lib/prometheus

sudo systemctl daemon-reload
sudo systemctl enable prometheus
sudo systemctl start prometheus

http://ec2-100-25-211-216.compute-1.amazonaws.com:9090/graph


# prometheus alert files
/etc/prometheus/alertmanager.yml
/etc/systemd/system/alertmanager.service
/etc/prometheus/rules.yml
/etc/prometheus/prometheus.yml

sudo nano /etc/prometheus/prometheus.yml
ls /etc/prometheus/alertmanager.yml /etc/systemd/system/alertmanager.service /etc/prometheus/rules.yml /etc/prometheus/prometheus.yml
cat /etc/prometheus/alertmanager.yml && echo "\n---\n" && cat /etc/systemd/system/alertmanager.service && echo "\n---\n" && cat /etc/prometheus/rules.yml && echo "\n---\n" && cat /etc/prometheus/prometheus.yml


udapeople-frontend-aaf4893
aaf4893
sudo systemctl restart prometheus

git commit -am "update stuff" && git push origin master


###############################################
current
###############################################

http://udapeople-95444d0.s3-website-us-east-1.amazonaws.com/#/employees
100.27.10.225:3030/api/status

https://github.com/CircleCI-Public/slack-orb/wiki/Setup


mkdir my-repo
cd my-repo
git init
curl -u 'wire2coder' https://api.github.com/user/repos -d '{"name":"devops-auto-deploy"}'
git remote -v
git add .
git commit -m "Initial commit"
git push origin master

i=1; for file in *.png; do mv "$file" "SCREENSHOT11_$(printf '%d' $i).png"; i=$((i+1)); done
